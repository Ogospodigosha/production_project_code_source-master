import {AuthApi} from "../api/AuthApi";

export const authSignIn =  async(phone: string, intervalId: any) => {
    debugger
    try {
        debugger
        await AuthApi.signIn({phone})
        // await dispatch(setSmsLoader(true))
        // dispatch(setPhoneNumber(phone));
        // dispatch(setAuthType('BASIC_SMS'));
    } catch (error: any) {
        if (!error.response) {
            // dispatch(showModal(false))
        }
        if (error.response.status === 423) {
            // dispatch(addNotification(['–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∑–∂–µ!'], 10))
            clearInterval(intervalId)
            // dispatch(showModal(false))
        } else if (error.response.status === 417) {
            // dispatch(showModal(false));
            // dispatch(setPhoneNumber(''))
            // dispatch(addNotification('–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç —Å–º—Å –≤ —Å—É—Ç–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞'))
        } if (error.response.status === 429) {
            // dispatch(addNotification('üê∂üê±üêπüê≠üê∞üôàü¶Üü¶Ä'))
        } else {
            // dispatch(authSignUp(phone))
        }
    }
}
